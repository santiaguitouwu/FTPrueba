
package servicios;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicioCRUD", targetNamespace = "http://Servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioCRUD {


    /**
     * 
     * @return
     *     returns java.util.List<servicios.Estudiante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "read", targetNamespace = "http://Servicios/", className = "servicios.Read")
    @ResponseWrapper(localName = "readResponse", targetNamespace = "http://Servicios/", className = "servicios.ReadResponse")
    @Action(input = "http://Servicios/ServicioCRUD/readRequest", output = "http://Servicios/ServicioCRUD/readResponse")
    public List<Estudiante> read();

    /**
     * 
     * @param apellido
     * @param idEstudiante
     * @param telefono
     * @param nombre
     * @param pais
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://Servicios/", className = "servicios.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://Servicios/", className = "servicios.CreateResponse")
    @Action(input = "http://Servicios/ServicioCRUD/createRequest", output = "http://Servicios/ServicioCRUD/createResponse")
    public String create(
        @WebParam(name = "ID_Estudiante", targetNamespace = "")
        String idEstudiante,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "pais", targetNamespace = "")
        String pais);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarPaises", targetNamespace = "http://Servicios/", className = "servicios.ListarPaises")
    @ResponseWrapper(localName = "listarPaisesResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarPaisesResponse")
    @Action(input = "http://Servicios/ServicioCRUD/listarPaisesRequest", output = "http://Servicios/ServicioCRUD/listarPaisesResponse")
    public List<String> listarPaises();

    /**
     * 
     * @param idEstudiante
     * @return
     *     returns servicios.Estudiante
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscar", targetNamespace = "http://Servicios/", className = "servicios.Buscar")
    @ResponseWrapper(localName = "buscarResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarResponse")
    @Action(input = "http://Servicios/ServicioCRUD/buscarRequest", output = "http://Servicios/ServicioCRUD/buscarResponse")
    public Estudiante buscar(
        @WebParam(name = "id_estudiante", targetNamespace = "")
        String idEstudiante);

    /**
     * 
     * @param id
     * @return
     *     returns servicios.Estudiante
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarID", targetNamespace = "http://Servicios/", className = "servicios.ListarID")
    @ResponseWrapper(localName = "listarIDResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarIDResponse")
    @Action(input = "http://Servicios/ServicioCRUD/listarIDRequest", output = "http://Servicios/ServicioCRUD/listarIDResponse")
    public Estudiante listarID(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param idEstudiante
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteEstudiante", targetNamespace = "http://Servicios/", className = "servicios.DeleteEstudiante")
    @ResponseWrapper(localName = "deleteEstudianteResponse", targetNamespace = "http://Servicios/", className = "servicios.DeleteEstudianteResponse")
    @Action(input = "http://Servicios/ServicioCRUD/deleteEstudianteRequest", output = "http://Servicios/ServicioCRUD/deleteEstudianteResponse")
    public String deleteEstudiante(
        @WebParam(name = "idEstudiante", targetNamespace = "")
        String idEstudiante);

    /**
     * 
     * @param apellido
     * @param idEstudiante
     * @param telefono
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEstudiante", targetNamespace = "http://Servicios/", className = "servicios.UpdateEstudiante")
    @ResponseWrapper(localName = "updateEstudianteResponse", targetNamespace = "http://Servicios/", className = "servicios.UpdateEstudianteResponse")
    @Action(input = "http://Servicios/ServicioCRUD/updateEstudianteRequest", output = "http://Servicios/ServicioCRUD/updateEstudianteResponse")
    public String updateEstudiante(
        @WebParam(name = "id_estudiante", targetNamespace = "")
        String idEstudiante,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono);

}
